{"version":3,"file":"rogue-engine-user-scripts.js","mappings":"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","sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/./Assets/Components/BallController.re.ts","webpack://[name]/./Assets/Components/Collider.re.ts","webpack://[name]/./Assets/Components/GameData.re.ts","webpack://[name]/./Assets/Components/GameLifeCycle.re.ts","webpack://[name]/./Assets/Components/GameUtils/GameStateController.ts","webpack://[name]/./Assets/Components/GameUtils/StyleDeclarations.ts","webpack://[name]/./Assets/Components/GameUtils/WindowUtils.ts","webpack://[name]/./Assets/Components/InputController.re.ts","webpack://[name]/./Assets/Components/PlayAudioClip.ts","webpack://[name]/./Assets/Components/PlayerCpuAI.re.ts","webpack://[name]/./Assets/Components/PlayerUser.re.ts","webpack://[name]/./Assets/Components/ResponsiveCamera.re.ts","webpack://[name]/./Assets/Components/UiManager.re.ts","webpack://[name]/external {\"commonjs\":\"rogue-engine\",\"commonjs2\":\"rogue-engine\",\"amd\":\"rogue-engine\",\"root\":\"rogue-engine\"}","webpack://[name]/external {\"commonjs\":\"three\",\"commonjs2\":\"three\",\"amd\":\"three\",\"root\":\"three\"}","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/runtime/chunk loaded","webpack://[name]/webpack/runtime/compat get default export","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand","webpack://[name]/webpack/runtime/make namespace object","webpack://[name]/webpack/runtime/jsonp chunk loading","webpack://[name]/webpack/before-startup","webpack://[name]/webpack/startup","webpack://[name]/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rogue-engine\"), require(\"three\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rogue-engine\", \"three\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rogue-engine-user-scripts\"] = factory(require(\"rogue-engine\"), require(\"three\"));\n\telse\n\t\troot[\"rogue-engine-user-scripts\"] = factory(root[\"rogue-engine\"], root[\"three\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE_rogue_engine__, __WEBPACK_EXTERNAL_MODULE_three__) {\nreturn ","/*\n * BallController\n * Manage ball movement and collisions\n * Causes a state change in the game: GameState.EndGameplay inside function \"setPlayerPoint\"\n */\n\nimport * as RE from 'rogue-engine';\nimport { Frustum, Matrix4, Vector2, Vector3 } from 'three';\nimport Collider from './Collider.re';\nimport GameStateController, { GameState } from './GameUtils/GameStateController';\nimport PlayAudioClip from './PlayAudioClip';\n\nconst { Prop } = RE;\n\nexport default class BallController extends RE.Component {\n\n  // Public component fields\n  @Prop(\"Number\") averageSpeed: number;\n  @Prop(\"Number\") safeDistance: number = 10;   // Max ball distance before restarting the game\n\n  // Game dependencies\n  ballCollider: Collider;\n  playAudioClipPlayer: PlayAudioClip;\n  playAudioClipWall: PlayAudioClip;\n\n  // Private variables\n  private direction: Vector3;\n  private initPosition: Vector3 = new Vector3(0, 0, 0);\n  private isPlaying: Boolean = false;\n\n  awake() {\n\n    this.ballCollider = RE.getComponentByName(\"Collider\", this.object3d) as Collider;\n    this.playAudioClipPlayer = RE.getComponentByName(\"AudioHitPlayer\", this.object3d) as PlayAudioClip;\n    this.playAudioClipWall = RE.getComponentByName(\"AudioHitWall\", this.object3d) as PlayAudioClip;\n\n    // Callback to detect game-state changes:\n    GameStateController.onChangeGameState((state) => {\n\n      if (state.new == GameState.StartGameplay && state.old != GameState.Pause) {\n\n        // Gameplay starts! Reset ball position, direction and allow update event (isPlaying = true) \n        this.object3d.position.copy(this.initPosition);\n        this.direction = new Vector3(0.7, Math.random(), 0);  // x: speed, y: direction\n        this.isPlaying = true;\n\n      } else if (state.new == GameState.EndGameplay || (state.new == GameState.MainMenu && state.old == GameState.Pause)) {\n        // Gameplay ends! Disable Update method\n        this.object3d.position.copy(this.initPosition);\n        this.isPlaying = false;\n      }\n\n    });\n\n  }\n\n  start() {\n    this.detectCollisions();\n    this.initPosition.copy(this.object3d.position);\n  }\n\n  update() {\n\n    if (!this.isPlaying)\n      return;\n\n    this.moveBall();\n    this.checkIfBallIsInField();\n\n  }\n\n  moveBall() {\n    this.object3d.translateOnAxis(this.direction, RE.Runtime.deltaTime * this.averageSpeed);\n  }\n\n\n  checkIfBallIsInField() {\n\n    // We simply check if ball.x is greater than the size of the field (safeDistance)\n    // For more complex situations, camera movements, etc., a Frustum should be created to check when the ball is outside camera view.\n\n    let posX = this.object3d.position.x;\n\n    if (posX > this.safeDistance) {\n\n      this.setPlayerPoint({ whoScored: \"cpu\" });\n\n    } else if (posX < - this.safeDistance) {\n\n      this.setPlayerPoint({ whoScored: \"user\" });\n\n    }\n\n  }\n\n  setPlayerPoint(pointData: any) {\n\n    if (!this.isPlaying)\n      return;\n\n    this.isPlaying = false;\n\n    // Send new change game state to notify all components\n    GameStateController.changeState(GameState.EndGameplay, pointData);\n  }\n\n  // Create the bounce of the ball. Ideally, we should calculate the reflected angle of the incident,\n  // for simplicity, as colliders are straight surfaces, we just invert the direction coordinate\n  detectCollisions() {\n\n    if (!this.ballCollider) return;\n\n    this.ballCollider.onCollisionEnter(collider => {\n\n      if (collider.tag === this.ballCollider.tag) return;\n\n      if (collider.tag == \"Wall\") {   // Reverse Y-axis direction when ball hits the walls\n        this.direction.y *= -1;\n        this.playAudioClipWall.play();\n      }\n\n      if (collider.tag == \"Player\") {    // Reverse X-axis direction when it hits the players\n\n        // We slightly modify the direction of the bounce with a random factor (It's more fun!).\n\n        var rndX = Math.random() * 0.7; // Random clampled in 0-0.5 range\n        var rndY = Math.random() * 0.3; // Random clampled in 0-0.3 range\n\n        // Reverse X direction and apply random factor\n        this.direction.x = (this.direction.x > 0) ? (-1 - rndX) : (1 + rndX);\n\n        // Y-axis does not have to be reversed, just apply random factor. \n        this.direction.y += rndY;\n\n        this.playAudioClipPlayer.play();\n      }\n    });\n  }\n\n}\n\nRE.registerComponent(BallController);\n","/*\n * Great collider component taken from:\n * https://github.com/BeardScript/RogueSpaceShooter/blob/master/Assets/Components/Collider.ts\n * WARNING: Z-AXIS IS DISABLED because I don´t need it!\n */\n\nimport * as RE from 'rogue-engine';\nimport { Box3, Object3D } from 'three';\n\nconst { Prop } = RE;\n\nexport default class Collider extends RE.Component {\n  @Prop(\"String\") tag: string;\n  @Prop(\"Boolean\") isStatic: boolean = true;\n\n  collidingWith: Collider[] = [];\n  collisionsThisFrame: Collider[] = [];\n  bounds: {\n    xMin: number,\n    xMax: number,\n    yMin: number,\n    yMax: number/*,\n    zMin: number,\n    zMax: number,*/\n  };\n\n  private onCollisionEnterCallbacks: ((collider: Collider) => void)[] = [];\n  private onCollisionStayCallbacks: ((collider: Collider) => void)[] = [];\n  private onCollisionExitCallbacks: ((collider: Collider) => void)[] = [];\n\n  awake() {\n    this.calculateCollisionPoints(this.object3d);\n  }\n\n  afterUpdate() {\n    this.detectCollisions();\n    this.detectEndedCollisions();\n  }\n\n  onCollisionEnter(callback: (collider: Collider) => void) {\n    this.onCollisionEnterCallbacks.push(callback);\n  }\n\n  onCollisionStay(callback: (collider: Collider) => void) {\n    this.onCollisionStayCallbacks.push(callback);\n  }\n\n  onCollisionExit(callback: (collider: Collider) => void) {\n    this.onCollisionExitCallbacks.push(callback);\n  }\n\n  private calculateCollisionPoints(object: Object3D) {\n    const bbox = new Box3().setFromObject(object);\n\n    this.bounds = {\n      xMin: bbox.min.x,\n      xMax: bbox.max.x,\n      yMin: bbox.min.y,\n      yMax: bbox.max.y/*,\n      zMin: bbox.min.z,\n      zMax: bbox.max.z,*/\n    };\n  }\n\n  private iterateComponents(callbak: (component: RE.Component) => void) {\n    if (!RE.components) return;\n\n    for (let objectUUID in RE.components) {\n      const objectComponents = RE.components[objectUUID];\n      if (!objectComponents) return;\n\n      for (let i = 0; i < objectComponents.length; i++) {\n        const component = objectComponents[i];\n        callbak(component);\n      }\n    }\n  }\n\n  private detectCollisions() {\n    this.collisionsThisFrame = [];\n    this.calculateCollisionPoints(this.object3d);\n    if (!this.bounds) return;\n\n    this.iterateComponents((component: RE.Component) => {\n      if (component instanceof Collider) {\n        if (!component.bounds || component === this) return;\n\n        if (\n          this.bounds.xMin <= component.bounds.xMax &&\n          this.bounds.xMax >= component.bounds.xMin &&\n          this.bounds.yMin <= component.bounds.yMax &&\n          this.bounds.yMax >= component.bounds.yMin /*&&\n          this.bounds.zMin <= component.bounds.zMax &&\n          this.bounds.zMax >= component.bounds.zMin*/\n        ) {\n          // Colliding!!\n          this.collisionsThisFrame.push(component);\n          const isEnter = this.collidingWith.find((collider) => collider === component) === undefined;\n\n          this.runCollisionCallbacks(component, isEnter);\n\n          if (!this.isStatic) {\n            this.pushBackFromCollidingObject(component);\n          }\n        }\n      }\n    });\n  }\n\n  private detectEndedCollisions() {\n    const endedCollisions: Collider[] = [];\n\n    for (let i = 0; i < this.collidingWith.length; i++) {\n      const currentCollider = this.collidingWith[i];\n\n      if (this.collisionsThisFrame.find((collider) => collider === currentCollider) === undefined) {\n        endedCollisions.push(currentCollider);\n      }\n    }\n\n    for (let i = 0; i < endedCollisions.length; i++) {\n      let collider = endedCollisions[i];\n      this.collidingWith.splice(this.collidingWith.indexOf(collider), 1);\n\n      for (const callback of this.onCollisionExitCallbacks) {\n        callback(collider);\n      }\n    }\n  }\n\n  private runCollisionCallbacks(collider: Collider, isEnter?: boolean) {\n    if (isEnter) {\n      for (const callback of this.onCollisionEnterCallbacks) {\n        callback(collider);\n      }\n      this.collidingWith.push(collider);\n    }\n\n    for (const callback of this.onCollisionStayCallbacks) {\n      callback(collider);\n    }\n  }\n\n  private pushBackFromCollidingObject(collider: Collider) {\n    //let colliderCenterZ: number | undefined;\n    let thisCenterZ: number | undefined;\n    // Move the object in the clear. Detect the best direction to move.\n    if (this.bounds.xMin <= collider.bounds.xMax && this.bounds.xMax >= collider.bounds.xMin) {\n      // Determine center then push out accordingly.\n      const objectCenterX = ((collider.bounds.xMax - collider.bounds.xMin) / 2) + collider.bounds.xMin;\n      const thisCenterX = ((this.bounds.xMax - this.bounds.xMin) / 2) + this.bounds.xMin;\n      /*\n      colliderCenterZ = ((collider.bounds.zMax - collider.bounds.zMin) / 2) + collider.bounds.zMin;\n      thisCenterZ = ((this.bounds.zMax - this.bounds.zMin) / 2) + this.bounds.zMin;*/\n\n      // Determine the X axis push.\n      if (objectCenterX > thisCenterX) {\n        this.object3d.position.x -= 1;\n      } else {\n        this.object3d.position.x += 1;\n      }\n    }\n    /*\n    if (this.bounds.zMin <= collider.bounds.zMax && this.bounds.zMax >= collider.bounds.zMin) {\n      // Determine the Z axis push.\n      if (colliderCenterZ && thisCenterZ && colliderCenterZ > thisCenterZ) {\n        this.object3d.position.z -= 1;\n      } else {\n        this.object3d.position.z += 1;\n      }\n    }\n    */\n  }\n}\n\nRE.registerComponent(Collider);\n","/*\n * GameData\n * At moment this is a very basic way to save information.\n * TODO: This will be the place where you can access the browser's localstorage to save / load persistent data, \n * manage best-scores ...\n */\n\nimport * as RE from 'rogue-engine';\nimport GameStateController, { GameState } from './GameUtils/GameStateController';\n\nexport default class GameData extends RE.Component {\n\n    private _scoreUser: number = 0;\n    private _scoreCpu: number = 0;\n\n    private _bestScore: number = 0;\n\n    public get scoreUser(): number {\n        return this._scoreUser;\n    }\n\n    public get scoreCpu(): number {\n        return this._scoreCpu;\n    }\n\n    public get bestScore(): number {\n        return this._bestScore;\n    }\n\n    public addScoreUser(amount: number) {\n        this._scoreUser += amount;\n        return this._scoreUser;\n    }\n\n    public addScoreCpu(amount: number) {\n        this._scoreCpu += amount;\n        return this._scoreCpu;\n    }\n\n    awake() {\n\n        GameStateController.onChangeGameState((state) => {\n\n            // Reset score when we repeat the game from the Scores menu or quit from Pause. \n            if (state.new == GameState.StartGameplay && state.old == GameState.ScoreMenu || \n                state.new == GameState.MainMenu && state.old == GameState.Pause) {\n                this._scoreUser = 0;\n                this._scoreCpu = 0;\n            }\n        });\n\n    }\n\n}\n\nRE.registerComponent(GameData);\n","/*\n * GameLifeCycle\n * Manage the life cycle of the game. \n * Is a global manager but not intended to be a god-object, valid for casual games with a single screen. \n * Not intended to be a game-pattern design!\n */\n\nimport * as RE from 'rogue-engine';\nimport GSC, { GameState } from './GameUtils/GameStateController';\nimport UiManager from './UiManager.re';\nimport GameData from './GameData.re';\nimport PlayAudioClip from './PlayAudioClip';\n\nconst { Prop } = RE;\n\nexport default class GameLifeCycle extends RE.Component implements GSC {\n\n  // Public component fields\n  @Prop(\"Number\") matchPoints: Number = 3;\n\n  // Game dependencies\n  uiManager: UiManager;\n  gameData: GameData;\n  playAudioClipGameOver: PlayAudioClip;\n\n  awake() {\n\n    this.uiManager = RE.getComponent(UiManager) as UiManager;\n    this.gameData = RE.getComponentByName(\"GameData\", this.object3d) as GameData;\n    this.playAudioClipGameOver = RE.getComponentByName(\"AudioGameOver\", this.object3d) as PlayAudioClip;\n\n    GSC.onChangeGameState((state) => {\n\n      if (state.new == GameState.EndGameplay) { // If any component (in this case BallController) tells us that the game has ended\n\n        let userScore: number = 0;\n        let cpuScore: number = 0;\n\n        // userData is an object sent with additional information. \n        // In this case, tell us who has scored a point\n        if (state.userData.whoScored == \"user\") {\n\n          userScore = this.gameData.addScoreUser(1);\n          this.uiManager.setScoreUI(state.userData.whoScored, userScore);\n\n        } else if (state.userData.whoScored == \"cpu\") {\n\n          cpuScore = this.gameData.addScoreCpu(1);\n          this.uiManager.setScoreUI(state.userData.whoScored, cpuScore);\n\n        }\n\n        // Some player has reached the match points?\n        if (this.matchPoints == userScore || this.matchPoints == cpuScore) {\n          GSC.changeState(GameState.ScoreMenu);\n          this.switchToScoreMenu();\n\n        } else { // No player has reached match points. Get back in the game!\n          setTimeout(() => {\n            GSC.changeState(GameState.StartGameplay);\n          }, 1000);\n        }\n\n      }\n\n    });\n  }\n\n  start() {\n    GSC.changeState(GameState.MainMenu);\n  }\n\n  pauseGame() {\n    // Not implemented\n  }\n\n  switchToScoreMenu() {\n    this.uiManager.hideUIGamePlay();\n    this.uiManager.showUIEndGame();\n    this.playAudioClipGameOver.play();\n  }\n\n}\n\n\nRE.registerComponent(GameLifeCycle);\n","/*\n * GameStateController\n * Manage the different game states. \n * It's a static class and can be used any component without instantiating.\n * onChangeGameState callback tell us when are game-state changes.\n * CAUTION: This callback is designed to manage changes between screens. \n * Do not use to manage things in Update, handle collisions and other things in real time, is not the right way\n */\n\n/*\n * How to use:\n *  - Import:\n       import GSC, { GameState } from './GameStateController';\n *  - Change state:\n       GSC.changeState(GameState.EndGameplay, {myCustomData : myCustomValue});\n *  - Get state changes (example):\n       GSC.onChangeGameState((state) => {\n\n            if (state.new == GameState.StartGameplay && state.old == GameState.MainMenu) {\n                // New game. The user was at the main menu and now starting a new game.\n                // Good time to load assets, audios, etc\n            } \n            else if (state.new == GameState.StartGameplay && state.old == GameState.EndGameplay) {\n                // New game-round. User starts another round in same scene after ending health/receiving a goal/losing a life...\n                // Good time to reset scene without loading anything extra\n            } else if (state.new == GameState.ScoreMenu && state.old == GameState.EndGameplay) {\n                // End game. \n                // Show score/options...\n            }\n            ...\n\n    });\n */\n\nexport enum GameState {\n    None,\n    Loading,\n    MainMenu,\n    StartGameplay,\n    Pause,\n    EndGameplay,\n    ScoreMenu\n};\n\ninterface cbGame {\n    (param: any): void;\n}\ninterface gameStateRequest {\n    newGameState: GameState;\n    _userData: any;\n}\n\nexport default class GameStateController {\n\n    static gameState = GameState.None;                  // Current gameState\n    static changeGameStateCb: cbGame[] = [];            // Array of callbacks to fire when game changes the state\n    static queueGameStates: gameStateRequest[] = [];    // Queue of change-state requests to avoid several changes at same time\n\n    static changingState: boolean = false;             // Flag to lock changeState function when is busy\n\n    static changeState(newGameState: GameState, _userData: any = {}) {\n\n        //changeState is busy. Save request and process later\n        if (this.changingState) {\n            this.queueGameStates.push({ newGameState: newGameState, _userData: _userData });\n            return;\n        }\n        this.changingState = true;\n\n        console.log(\"Attempting change game state from \" + GameState[this.gameState] + \" to \" + GameState[newGameState]);\n\n        // Notify all components:\n        for (let i = 0; i < this.changeGameStateCb.length; i++) {\n            this.changeGameStateCb[i]({\n                old: this.gameState,\n                new: newGameState,\n                userData: _userData\n            });\n        }\n\n        this.gameState = newGameState;\n        this.changingState = false;\n\n        // Check now if there are pending requests to process\n        if (this.queueGameStates.length > 0) {\n            var gameStateChangeRequest = this.queueGameStates.shift();\n            this.changeState(gameStateChangeRequest!.newGameState, gameStateChangeRequest!._userData);\n        }\n    }\n\n    // Keep the callbacks to fire when there is a change of state\n    static onChangeGameState(cb: (arg: any) => void) {\n        this.changeGameStateCb.push(cb);\n    }\n}\n\n\n","\n/*\n * StyleDeclarations\n * Temp way to keep CSS styles to free up code space in the UIManager.\n */\nimport WindowUtils from \"./WindowUtils\";\nexport default class StyleDeclarations {\n\n    static mainFont: string = \"@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap')\";\n    static startGameContainer: string = \"margin: auto;height: 100%;display: none;background-color: rgba(0, 0, 0, 0.7);align-content: space-around;justify-content: center;flex-wrap: wrap;flex-direction: column;align-items: center;font-family: 'Press Start 2P', cursive;\";\n    static playGameContainer: string = (!WindowUtils.isPortrait()) ? \n    \"margin: auto;height: 100%;display: none;background-color: transparent;place-content: space-around center;flex-flow: column wrap;align-items: flex-start;align-content: flex-start;flex-wrap: nowrap;flex-direction: row;justify-content: space-evenly;font-family: 'Press Start 2P', cursive;\":\n    \"margin: auto;height: 80%;display: flex;background-color: transparent;align-items: flex-start;place-content: flex-start space-evenly;flex-flow: row nowrap;font-family: 'Press Start 2P', cursive;flex-direction: column;\";    \n    static endGameContainer: string = \"margin: auto;height: 100%;display: none;background-color: rgba(0, 0, 0, 0.7);;align-content: space-around;justify-content: center;flex-wrap: wrap;flex-direction: column;align-items: center;font-family: 'Press Start 2P', cursive;\";\n    static pauseGameContainer: string = \"margin: auto;height: 100%;width: 100%;display: none;background-color: rgba(0, 0, 0, 0.7);align-content: space-around;justify-content: center;flex-wrap: wrap;flex-direction: column;align-items: center;font-family: 'Press Start 2P', cursive;position: absolute;top:0%\";\n\n\n    static gameTitle: string = \"color: white; text-align: center;\";\n    static playBtn: string = \"cursor: pointer; color: white; position: relative; text-align: center;\";\n\n    static score: string = \"float:left;textAlign:center;font-size: 30px;margin:10px;lineHeight:50px;justify-content: top;color:white;display:flex;\";\n    static bestScore: string = \"float:left;textAlign:center;margin:10px;lineHeight:30px;color:white;display:flex;\";\n    static pauseGameBtn: string = \"background-color: transparent;textAlign:center;margin:10px;lineHeight:30px;color:white;position: absolute;\";\n\n    static endScore: string = \"float:left;textAlign:center;margin:10px;lineHeight:30px;color:white;display:flex;\";\n    static endBestScore: string = \"float:left;textAlign:center;margin:50px;lineHeight:30px;color:white;display:flex;\";\n    static replayBtn: string = \"cursor: pointer; color: white; position: relative;display:flex;\";\n\n    static resumeBtn: string = \"cursor: pointer; color: white; position: relative;display:flex;\";\n    static quitGameBtn: string = \"cursor: pointer; color: white; position: relative;display:flex;\";\n\n}\n\n","/*\n * WindowUtils\n * Manage the different window behaviours. \n * It's a static class and can be used without instantiating.\n */\n\ninterface winCb {\n    (): void;\n}\n\nexport default class WindowUtils {\n\n    static clickEventName = WindowUtils.isMobile() ? \"touchstart\" : \"click\";\n\n    static rtime: Date;\n    static timeout: boolean = false;\n    static delta: number = 600;\n\n    static onResizeCompleteCb: winCb[] = [];            // Array of callbacks to fire when window size has changed\n\n    // Wait the end of window resize event.\n    // Taken from https://stackoverflow.com/questions/5489946/how-to-wait-for-the-end-of-resize-event-and-only-then-perform-an-action\n    static onResizeComplete(cb: () => void) {\n\n        this.onResizeCompleteCb.push(cb);\n\n        // Auto-initialization of the event. When it detects at least one callback, it listens to the window event\n        if (this.onResizeCompleteCb.length == 1) {\n\n            window.addEventListener(\"resize\", () => {\n\n                this.rtime = new Date();\n\n                // block this event until a delta time has passed\n                if (this.timeout === false) {\n                    this.timeout = true;\n                    setTimeout(() => { this.resizeend(); }, this.delta);\n                }\n            });\n        }\n    }\n\n    static resizeend() {\n\n        const newTime = new Date();\n\n        const diff = newTime.getTime() - this.rtime.getTime();\n\n        if (diff < this.delta) {\n\n            setTimeout(() => { this.resizeend() }, this.delta);\n\n        } else {\n\n            this.timeout = false;\n\n            for (let i = 0; i < this.onResizeCompleteCb.length; i++) {\n\n                this.onResizeCompleteCb[i]();\n            }\n        }\n    }\n\n    // Get if screen orientation is Portrait\n    static isPortrait() {\n        return window.innerWidth <= window.innerHeight;\n    }\n\n    // Get if screen orientation is Landscape\n    static isLandscape() {\n        return window.innerWidth > window.innerHeight;\n    }\n\n    // Get if device is mobile\n    static isMobile() {\n        let check = false;\n        (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor);\n        return check;\n    };\n\n    static getRogueCanvas() {\n        return (document.getElementById(\"rogue-ui\") as HTMLElement);\n    }\n\n    static getAspectRatio() {\n        return window.innerWidth / window.innerHeight;\n    }\n\n    static getClickEventName() {\n        return WindowUtils.isMobile() ? \"touchstart\" : \"click\";\n    }\n\n\n    /*\n        onResize: ((cb: Greeter) => void)[];\n        \n        static isPortrait(){\n            return window.innerWidth <= window.innerHeight;\n        }\n        static isLandscape() {\n            return window.innerWidth > window.innerHeight;\n        }\n        \n        static onResize(cb: Greeter) {\n    \n            this.onResize[this.onResize.length-1] = cb;\n    \n            if (this.onResize.length == 1) {\n                console.log(\"Start window resize event\");\n    \n                window.addEventListener(\"resize\", ()=>{\n                    this.onResizeWindow();\n                   \n                });\n            }\n            \n        }\n    \n        static onResizeWindow () {\n            this.rtime = new Date();\n            if (this.timeout === false) {\n                this.timeout = true;\n                setTimeout(()=>{this.resizeend()}, this.delta);\n            }\n        }\n    \n        static resizeend() {\n            const newTime = new Date();\n            const diff = newTime.getTime() - this.rtime.getTime() ;\n            if (diff < this.delta) {\n                setTimeout(()=>{this.resizeend()}, this.delta);\n            } else {\n                this.timeout = false;\n                for (let i = 0; i < this.onResize.length; i++) {\n                    console.log(\"Static class firing cb\");\n                    this.onResize[i]();\n                }   \n            }               \n        }  \n    \n        static isMobile () {\n            let check = false;\n            (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor);\n            return check;\n        };\n        */\n\n}\n\n","/*\n * InputController\n * Manage user input using mouse or touches regarding the device. Only for ortographic camera\n */\n\nimport * as RE from 'rogue-engine';\nimport { Vector2, Raycaster } from 'three';\nimport GameStateController, { GameState } from './GameUtils/GameStateController';\nimport WindowUtils from './GameUtils/WindowUtils';\n\nconst { Prop } = RE;\n\nexport default class InputController extends RE.Component {\n\n  // Public component fields\n  @Prop(\"Boolean\") moveX: boolean = false;\n  @Prop(\"Boolean\") moveY: boolean = true;\n\n  // Private variables\n  private raycaster: Raycaster;\n  private target: Vector2 = new Vector2(0, 0);\n  private divContainer: HTMLElement;\n  private isPlaying: Boolean;\n  private useTouches: Boolean;\n  private rect: any;\n\n\n  awake() {\n\n    GameStateController.onChangeGameState((e) => {\n\n      if (e.new == GameState.StartGameplay) {\n        this.isPlaying = true;\n      } else if (e.new == GameState.EndGameplay || e.new == GameState.MainMenu) {\n        this.isPlaying = false;\n      } \n    });\n\n    this.useTouches = WindowUtils.isMobile();\n  }\n\n  start() {\n\n    this.raycaster = new Raycaster();\n\n    this.divContainer = WindowUtils.getRogueCanvas();;\n    this.rect = this.divContainer.getBoundingClientRect();\n\n    WindowUtils.onResizeComplete(() => { this.resizeWindowRect() });\n  }\n\n  resizeWindowRect() {\n    this.rect = this.divContainer.getBoundingClientRect();\n  }\n\n  update() {\n\n    if (!this.isPlaying)\n      return;\n\n    this.handleInput();\n\n  }\n\n  handleInput() {\n\n    let inputX, inputY;\n\n    if (this.useTouches) {\n\n      var touches = RE.Input.touch.touches;\n\n      if (!touches || touches.length == 0) {\n        return;\n      }\n\n      inputX = touches[0].x;\n      inputY = touches[0].y;\n\n    } else {\n\n      inputX = RE.Input.mouse.x;\n      inputY = RE.Input.mouse.y;\n    }\n\n    // calculate mouse/touch position in normalized device coordinates\n    this.target.set(\n      ((inputX - this.rect.left) / this.rect.width) * 2 - 1,\n      -((inputY - this.rect.top) / this.rect.height) * 2 + 1\n    );\n\n    // Valid for Ortographic Camera (without distance()\n    this.raycaster.setFromCamera(this.target, RE.Runtime.camera);\n\n    let origin = this.raycaster.ray.origin;\n\n    if (this.moveX)\n      this.object3d.position.x = origin.x;\n\n    if (this.moveY)\n      this.object3d.position.y = origin.y;\n\n  }\n\n}\n\nRE.registerComponent(InputController);\n","/*\n * PlayAudio component taken from:\n * https://github.com/BeardScript/RogueSpaceShooter/blob/master/Assets/Components/PlayAudio.ts\n */\n\nimport * as RE from 'rogue-engine';\nimport { Audio } from 'three';\n\nconst { Prop } = RE;\n\nexport default class PlayAudioClip extends RE.Component {\n\n  // Public component fields\n  @Prop(\"Audio\") clip: Audio;\n  @Prop(\"Number\") volume: number = 1;\n  @Prop(\"Boolean\") playOnAwake: boolean = true;\n  @Prop(\"Boolean\") loop: boolean = false;\n  @Prop(\"Boolean\") muted: boolean = false;\n\n  start() {\n    this.clip.setVolume(this.volume);\n    this.clip.setLoop(this.loop);\n\n    if (this.playOnAwake && !this.muted)\n      this.clip && this.clip.play();\n  }\n\n  play() {\n    if (!this.muted)\n      this.clip && this.clip.play();\n  }\n}\n\nRE.registerComponent(PlayAudioClip);\n","/*\n * PlayerCpuAI\n * Manages player-cup behavior AI\n * Follows ball with simple Lerp movement\n */\n\nimport * as RE from 'rogue-engine';\nimport { MathUtils, Object3D, Vector3 } from 'three';\nimport GameStateController, { GameState } from './GameUtils/GameStateController';\n\nconst { Prop } = RE;\n\nexport default class PlayerCpuAI extends RE.Component {\n\n  // Public component fields\n  @Prop(\"Object3D\") ball: Object3D;\n  @Prop(\"Number\") responseSpeed: number = 1;            // Player-cpu speed when following the ball\n  @Prop(\"Number\") maxVMovement: number = 3;                 // Maximum range of vertical movement\n\n  // Private variables\n  private initPosition: Vector3 = new Vector3(0, 0, 0);\n  private isPlaying: Boolean = false;\n\n  awake() {\n\n    GameStateController.onChangeGameState((state) => {\n\n      if (state.new == GameState.StartGameplay) {\n        this.isPlaying = true;\n      } else if (state.new == GameState.EndGameplay || (state.new == GameState.MainMenu && state.old == GameState.Pause)) {\n        // Reset position when round ends or game is finished from pause\n        this.isPlaying = false;\n        this.object3d.position.copy(this.initPosition);\n      }\n\n    });\n  }\n\n  start() {\n    this.initPosition.copy(this.object3d.position);\n  }\n\n  update() {\n\n    // Super basic AI. Follow the ball using a lerp to adjust the speed\n    if (this.isPlaying)\n      this.object3d.position.y = MathUtils.lerp(this.object3d.position.y, this.ball.position.y, this.responseSpeed);\n\n    \n    // We easily limit the maximum vertical movement of the player:\n\n    if (this.object3d.position.y > this.maxVMovement)\n      this.object3d.position.y = this.maxVMovement;\n\n    if (this.object3d.position.y < -this.maxVMovement)\n      this.object3d.position.y = -this.maxVMovement;  \n\n  }\n\n}\n\nRE.registerComponent(PlayerCpuAI);\n","/*\n * PlayerUser\n * Manages player-user behavior (At moment just reset position)\n */\n\nimport * as RE from 'rogue-engine';\nimport { Vector3 } from 'three';\nimport GameStateController, { GameState } from './GameUtils/GameStateController';\n\nconst { Prop } = RE;\n\nexport default class PlayerUser extends RE.Component {\n\n  // Public component fields\n  @Prop(\"Number\") maxVMovement: number = 3;           // Maximum range of vertical movement\n\n  // Private vars:\n  private initPosition: Vector3 = new Vector3(0, 0, 0);\n\n  awake() {\n\n    GameStateController.onChangeGameState((state) => {\n\n      // Reset position when round ends or game is finished from pause\n      if (state.new == GameState.EndGameplay || (state.new == GameState.MainMenu && state.old == GameState.Pause)) {\n        this.object3d.position.set(this.initPosition.x, this.initPosition.y, this.initPosition.z);\n      }\n    });\n  }\n\n  start() {\n    this.initPosition.copy(this.object3d.position);\n  }\n\n  update() {\n\n    // We easily limit the maximum vertical movement of the player:\n\n    if (this.object3d.position.y > this.maxVMovement)\n      this.object3d.position.y = this.maxVMovement;\n\n    if (this.object3d.position.y < -this.maxVMovement)\n      this.object3d.position.y = -this.maxVMovement;\n\n  }\n\n}\n\nRE.registerComponent(PlayerUser);\n","/*\n * ResponsiveCamera\n * Fit object bounds into the camera.\n * Control and management of screen size and orientation.\n */\n\nimport * as RE from 'rogue-engine';\nimport { Box3, OrthographicCamera, Object3D, Vector2, Vector3, MathUtils } from 'three';\nimport WindowUtils from './GameUtils/WindowUtils';\n\nconst { Prop } = RE;\n\nexport default class ResponsiveCamera extends RE.Component {\n\n  // Public component fields\n  @Prop(\"Object3D\") target: Object3D;\n  @Prop(\"Number\") zoomOffset: number = 0.9;\n\n  // Game dependencies\n  private camera: OrthographicCamera;\n\n  // Private variables\n  private isWindowPortrait: Boolean = false;\n  private objBoundingBox: Box3 = new Box3();\n  private objCenter: Vector3 = new Vector3(0, 0, 0);\n  private objSize: Vector3 = new Vector3(0, 0, 0);\n\n  awake() {\n    this.camera = RE.Runtime.camera as OrthographicCamera;\n  }\n\n  start() {\n\n    // get bounding box of object - this will be used to setup controls and camera\n    this.calcObjectBounds();\n\n    // Fire handleWindowScreen to handle screen layout when game starts. \n    // I put it inside the onload event so that the rest of the game is loaded\n    window.addEventListener(\"load\", (event) => {\n      this.handleWindowScreen();\n    });\n\n    // I also add the event for when the screen size / layout is changed\n    WindowUtils.onResizeComplete(() => { this.handleWindowScreen() });\n  }\n\n\n  calcObjectBounds() {\n    this.objBoundingBox.setFromObject(this.target);\n    this.objBoundingBox.getCenter(this.objCenter);\n    this.objBoundingBox.getSize(this.objSize);\n  }\n\n  handleWindowScreen() {\n\n    this.handleOrientation();\n    this.handleScreenSize();\n    this.handleDevice();\n    this.camera.updateProjectionMatrix();\n\n  }\n\n\n  handleScreenSize() {\n\n    var sizeFieldInCamY = this.objSize.y * 0.1;\n    var sizeFieldInCamX = this.objSize.x * 0.1;\n\n    // Aspect ratio\n    var aspect = WindowUtils.getAspectRatio();\n\n    // Landscape\n    if (!this.isWindowPortrait) {\n\n      // As field is horizontal, in landscape take into account when SCREEN_H is \n      // smaller than the vertical size of the field\n      if (1 / aspect < sizeFieldInCamY) {\n        this.camera.zoom = this.zoomOffset * sizeFieldInCamY * 2 / aspect;\n      } else {\n        this.camera.zoom = this.zoomOffset / sizeFieldInCamX;\n      }\n\n    } else {\n\n      // Portrait\n      if (aspect > sizeFieldInCamY) {\n        this.camera.zoom = this.zoomOffset / sizeFieldInCamX / aspect;\n      } else {\n        this.camera.zoom = this.zoomOffset * sizeFieldInCamY * 2;\n      }\n    }\n\n  }\n\n  // The layout depends on the type of device. \n  // For mobile we have to give some free space to move the fingers across the screen without covering the player\n  handleDevice() {\n    this.camera.position.x = (WindowUtils.isMobile()) ? 1.5 : 0;\n  }\n\n\n  handleOrientation() {\n\n    // Orientation Change to portrait\n    if (!this.isWindowPortrait && WindowUtils.isPortrait()) {\n\n      // Rotate camera to fit field in portrait\n      this.camera.rotation.z = MathUtils.degToRad(90);\n      this.isWindowPortrait = true;\n\n    }\n\n    // Orientation Change to landscape\n    if (this.isWindowPortrait && !WindowUtils.isPortrait()) {\n\n      // Reset camera rotation\n      this.camera.rotation.z = 0;\n      this.isWindowPortrait = false;\n\n    }\n  }\n\n\n}\n\nRE.registerComponent(ResponsiveCamera);\n","/*\n * UiManager\n * Manage menu and GUI integration using HTML tags\n * Causes a state change in the game: GameState.StartGameplay inside function \"createUIMainMenu\" & \"createUIEndGame\"\n */\n\nimport * as RE from 'rogue-engine';\nimport StyleDeclarations from './GameUtils/StyleDeclarations';\nimport GameStateController, { GameState } from './GameUtils/GameStateController';\nimport GameData from './GameData.re';\nimport WindowUtils from './GameUtils/WindowUtils';\n\nconst { Prop } = RE;\n\n\nexport default class UiManager extends RE.Component {\n\n  // Public component fields\n  @Prop(\"Boolean\") playOnAwake: boolean = true;\n  @Prop(\"String\") title: string = \"my game name\";\n\n  // Game dependencies\n  gameData: GameData;\n\n  // Private vars\n  private uiContainer: HTMLElement;\n\n  private startGameUI: HTMLElement;\n  private gameTitle: HTMLElement;\n  private playBtn: HTMLElement;\n\n  private playGameUI: HTMLElement;\n  private scoreUICpu: HTMLElement;\n  private scoreUIPlayer: HTMLElement;\n  private pauseGameBtn: HTMLElement;\n  //private bestscoreUIPlayer: HTMLElement;\n\n  private endGameUI: HTMLElement;\n  private endscoreUIPlayer: HTMLElement;\n  //private endBestscoreUIPlayer: HTMLElement;\n  private replayBtn: HTMLElement;\n\n  private pauseGameUI: HTMLElement;\n  private resumeBtn: HTMLElement;\n  private quitGameBtn: HTMLElement;\n\n  awake() {\n\n    this.gameData = RE.getComponent(GameData) as GameData;\n    this.createMainContainer();\n    this.createUIMainMenu();\n    this.createUIGamePlay();\n    this.createUIEndGame();\n    this.createUIPauseGame();\n\n  }\n\n  start() {\n    if (this.playOnAwake) {\n      this.showUIMainMenu();\n    }\n\n  }\n\n  createMainContainer() {\n\n    this.uiContainer = WindowUtils.getRogueCanvas();\n    const myCss = document.createElement(\"style\");\n    myCss.innerHTML = StyleDeclarations.mainFont;\n    this.uiContainer.appendChild(myCss);\n  }\n\n  createUIMainMenu() {\n\n    this.startGameUI = document.createElement(\"div\");\n    this.startGameUI.style.cssText = StyleDeclarations.startGameContainer;\n\n    this.gameTitle = document.createElement(\"h1\");\n    this.gameTitle.style.cssText = StyleDeclarations.gameTitle;\n    this.gameTitle.textContent = this.title;\n\n    this.playBtn = document.createElement(\"h2\");\n    this.playBtn.style.cssText = StyleDeclarations.playBtn;\n    this.playBtn.textContent = \"Play!\";\n\n    this.playBtn.addEventListener(WindowUtils.clickEventName, () => {\n      this.hideUIMainMenu();\n      this.showUIGamePlay();\n      GameStateController.changeState(GameState.StartGameplay);\n    });\n\n    this.startGameUI.appendChild(this.gameTitle);\n    this.startGameUI.appendChild(this.playBtn);\n\n    this.uiContainer.appendChild(this.startGameUI);\n  }\n\n  createUIGamePlay() {\n\n    this.playGameUI = document.createElement(\"div\");\n    this.playGameUI.style.cssText = StyleDeclarations.playGameContainer;\n\n    this.scoreUICpu = document.createElement(\"div\");\n    this.scoreUICpu.textContent = \"0\";\n    this.scoreUICpu.style.cssText = StyleDeclarations.score;\n\n    this.scoreUIPlayer = document.createElement(\"div\");\n    this.scoreUIPlayer.textContent = \"0\";\n    this.scoreUIPlayer.style.cssText = StyleDeclarations.score;\n\n    this.pauseGameBtn = document.createElement(\"BUTTON\");\n    this.pauseGameBtn.textContent = \"| |\";\n    this.pauseGameBtn.style.cssText = StyleDeclarations.pauseGameBtn;\n\n    this.pauseGameBtn.addEventListener(WindowUtils.clickEventName, () => {\n      RE.Runtime.pause();\n      this.showUIPauseGame();\n      GameStateController.changeState(GameState.Pause);\n    });\n\n\n    this.playGameUI.appendChild(this.scoreUICpu);\n    this.playGameUI.appendChild(this.scoreUIPlayer);\n    this.playGameUI.appendChild(this.pauseGameBtn);\n\n    this.uiContainer.appendChild(this.playGameUI);\n\n  }\n\n  createUIEndGame() {\n\n    this.endGameUI = document.createElement(\"div\");\n    this.endGameUI.style.cssText = StyleDeclarations.endGameContainer;\n\n    this.endscoreUIPlayer = document.createElement(\"div\");\n    this.endscoreUIPlayer.textContent = \"\";\n    this.endscoreUIPlayer.style.cssText = StyleDeclarations.endScore;\n    /*\n        this.endBestscoreUIPlayer = document.createElement(\"div\");\n        this.endBestscoreUIPlayer.textContent = \"Best score 0\";\n        this.endBestscoreUIPlayer.style.cssText = StyleDeclarations.endBestScore;\n    */\n    this.replayBtn = document.createElement(\"h2\");\n    this.replayBtn.style.cssText = StyleDeclarations.replayBtn;\n    this.replayBtn.textContent = \"Play again!\";\n\n    this.replayBtn.addEventListener(WindowUtils.clickEventName, () => {\n      this.hideUIEndGame();\n      this.showUIGamePlay();\n      GameStateController.changeState(GameState.StartGameplay);\n    });\n\n    this.endGameUI.appendChild(this.endscoreUIPlayer);\n    //  this.endGameUI.appendChild(this.endBestscoreUIPlayer);\n    this.endGameUI.appendChild(this.replayBtn);\n\n\n    this.uiContainer.appendChild(this.endGameUI);\n\n  }\n\n  createUIPauseGame() {\n\n    this.pauseGameUI = document.createElement(\"div\");\n    this.pauseGameUI.style.cssText = StyleDeclarations.pauseGameContainer;\n\n    this.resumeBtn = document.createElement(\"h2\");\n    this.resumeBtn.style.cssText = StyleDeclarations.resumeBtn;\n    this.resumeBtn.textContent = \"Resume\";\n    \n\n    this.resumeBtn.addEventListener(WindowUtils.clickEventName, () => {\n      this.hideUIPauseGame();\n      RE.Runtime.resume();\n      GameStateController.changeState(GameState.StartGameplay);\n    });\n\n    this.quitGameBtn = document.createElement(\"h2\");\n    this.quitGameBtn.style.cssText = StyleDeclarations.quitGameBtn;\n    this.quitGameBtn.textContent = \"Quit\";\n\n    this.quitGameBtn.addEventListener(WindowUtils.clickEventName, () => {\n      this.hideUIPauseGame();\n      this.showUIMainMenu();\n      RE.Runtime.resume();\n      GameStateController.changeState(GameState.MainMenu);\n    });\n    \n\n    this.pauseGameUI.appendChild(this.resumeBtn);\n    this.pauseGameUI.appendChild(this.quitGameBtn);\n   \n    this.uiContainer.appendChild(this.pauseGameUI);\n\n  }\n\n\n\n  showUIMainMenu() {\n    this.startGameUI.style.display = \"flex\";\n  }\n\n  hideUIMainMenu() {\n    this.startGameUI.style.display = \"none\";\n  }\n\n  showUIGamePlay() {\n    this.scoreUIPlayer.textContent = \"0\";\n    this.scoreUICpu.textContent = \"0\";\n    this.playGameUI.style.display = \"flex\";\n  }\n\n  hideUIGamePlay() {\n    this.playGameUI.style.display = \"none\";\n  }\n\n  showUIEndGame() {\n    this.endscoreUIPlayer.textContent = this.gameData.scoreCpu.toString() + \" - \" + this.gameData.scoreUser.toString();\n    //this.endBestscoreUIPlayer.textContent = Calcular!!\n    this.endGameUI.style.display = \"flex\";\n  }\n\n  hideUIEndGame() {\n    this.endGameUI.style.display = \"none\";\n  }\n\n  showUIPauseGame() {\n    this.pauseGameUI.style.display = \"flex\";\n  }\n\n  hideUIPauseGame() {\n    this.pauseGameUI.style.display = \"none\";\n  }\n\n  setScoreUI(player: string, amount: Number) {\n    if (player == \"user\") {\n      this.scoreUIPlayer.textContent = amount.toString();\n    } else if (player == \"cpu\") {\n      this.scoreUICpu.textContent = amount.toString();\n    }\n  }\n\n  switchToGameplayUI() {\n    this.hideUIMainMenu();\n    this.showUIGamePlay();\n    GameStateController.changeState(GameState.StartGameplay);\n  }\n\n}\n\n\nRE.registerComponent(UiManager);\n","module.exports = __WEBPACK_EXTERNAL_MODULE_rogue_engine__;","module.exports = __WEBPACK_EXTERNAL_MODULE_three__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"rogue-engine-user-scripts\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_name_\"] = self[\"webpackChunk_name_\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n__webpack_require__(\"./Assets/Components/BallController.re.ts\");\n__webpack_require__(\"./Assets/Components/Collider.re.ts\");\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./Assets/Components/GameData.re.ts\");\n__webpack_require__(\"./Assets/Components/GameLifeCycle.re.ts\");\n__webpack_require__(\"./Assets/Components/GameUtils/GameStateController.ts\");\n__webpack_require__(\"./Assets/Components/GameUtils/StyleDeclarations.ts\");\n__webpack_require__(\"./Assets/Components/GameUtils/WindowUtils.ts\");\n__webpack_require__(\"./Assets/Components/InputController.re.ts\");\n__webpack_require__(\"./Assets/Components/PlayAudioClip.ts\");\n__webpack_require__(\"./Assets/Components/PlayerCpuAI.re.ts\");\n__webpack_require__(\"./Assets/Components/PlayerUser.re.ts\");\n__webpack_require__(\"./Assets/Components/ResponsiveCamera.re.ts\");\nvar __webpack_exports__ = __webpack_require__(\"./Assets/Components/UiManager.re.ts\");\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}